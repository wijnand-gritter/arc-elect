# .husky/commit-msg

# ‚úÖ Enforce:
# - type(scope): description
# - type = lowercase word
# - scope = one or more lowercase/hyphen words, separated by comma (no trailing commas, no empty scopes)
# - colon has no space before, one space after
# - description starts lowercase, doesn't end with a dot
REGEX="^[a-z]+\\(([a-z0-9-]+)(,[a-z0-9-]+)*\\):\s[a-z][^\\.]*$"

# Get the current commit message
current_commit_msg=$(cat "$1")

# Get the previous commit message
previous_commit_msg=$(git log -1 --pretty=%B)

# Check if the current commit message is the same as the previous one
if [ "$current_commit_msg" = "$previous_commit_msg" ]; then
  echo "‚ùå Commit message is the same as the previous one."
  echo "üí° Please change the commit message before committing."
  exit 1
fi

# Check commit message format using the regex
if ! grep -qE "$REGEX" "$1"; then
  echo "‚ùå Invalid commit message format"
  echo ""
  echo "Expected: type(scope): description"
  echo ""
  echo "Allowed types:"
  echo "  - feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert"
  echo ""
  echo "Scopes (examples, lowercase, hyphenated):"
  echo "  - main, preload, renderer, analytics, build, ci, ui, docs, tests"
  echo "  - multi-scope: ui,build"
  echo ""
  echo "Formatting rules:"
  echo "  - no space before colon, exactly one space after"
  echo "  - description starts lowercase, no trailing period"
  echo ""
  echo "Examples:"
  echo "  feat(renderer): add analytics insights search"
  echo "  fix(main,preload): validate ipc payloads"
  echo "  ci(workflow): add manual-only build pipeline"
  exit 1
fi

# Run commitlint
npx --no-install commitlint --edit "$1"